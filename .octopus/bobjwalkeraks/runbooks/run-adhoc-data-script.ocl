name = "🗄️ Run Adhoc Data Script"
default_guided_failure_mode = "EnvironmentDefault"
description = <<-EOT
        **Action**: Allows users to run an ad-hoc script to fix any data funk within the application.  All scripts are verified before running by checking the number of rows effected and the SQL Statements.
          
          **Affects**: The SQL Server this application is running on.
        EOT
environment_scope = "Specified"
environments = ["test", "staging", "production"]

connectivity_policy {
    allow_deployments_to_no_targets = true
}

run_retention_policy {
    quantity_to_keep = 5
}

process {
    step "azure-key-vault-retrieve-secrets" {
        name = "Azure Key Vault - Retrieve Secrets"

        action {
            notes = <<-EOT
                    **Always Runs**
                    
                    Pulls the connection secrets from Azure Key Vault.
                    EOT
            properties = {
                Azure.KeyVault.RetrieveSecrets.Account = "Azure.Account"
                Azure.KeyVault.RetrieveSecrets.PrintVariableNames = "False"
                Azure.KeyVault.RetrieveSecrets.VaultName = "#{Project.Azure.KeyVault.Name}"
                Azure.KeyVault.RetrieveSecrets.VaultSecrets = "#{Project.Azure.KeyVault.Secrets}"
                Octopus.Action.Template.Id = "ActionTemplates-561"
                Octopus.Action.Template.Version = "2"
            }
            worker_pool_variable = "Standards.Worker.Pool"

            container {
                feed = "dockerhub"
                image = "#{Standards.Azure.ExecutionContainer}"
            }
        }
    }

    process_template "run-adhoc-data-update-script" {
        name = "Run AdHoc Data Update Script"
        process_template_slug = "runbook-run-adhoc-data-update-script"
        version_mask = "1.0.X"

        parameter "Template.ScriptToRun.Text" {
            value = "#{Project.ScriptToRun.Text}"
        }

        parameter "Template.SQLServer.Database.Name" {
            value = "#{Standards.Database.Name}"
        }

        parameter "Template.SQLServer.Name" {
            value = "#{Project.SQLServer.Server.Name}"
        }

        parameter "Template.SQLServer.User.Name" {
            value = "#{Project.SQLServer.User.Name}"
        }

        parameter "Template.SQLServer.User.Password" {
            value = "#{Project.SQLServer.User.Password}"
        }

        parameter "Template.WorkerPool" {
            value = "#{Standards.Worker.Pool}"
        }
    }
}
name = "🗄️ Run Adhoc Data Script"
default_guided_failure_mode = "EnvironmentDefault"
description = <<-EOT
        **Action**: Allows users to run an ad-hoc script to fix any data funk within the application.  All scripts are verified before running by checking the number of rows effected and the SQL Statements.
          
          **Affects**: The SQL Server this application is running on.
        EOT
environment_scope = "Specified"
environments = ["test", "staging", "production"]

connectivity_policy {
    allow_deployments_to_no_targets = true
}

run_retention_policy {
    quantity_to_keep = 5
}

process {
    step "azure-key-vault-retrieve-secrets" {
        name = "Azure Key Vault - Retrieve Secrets"

        action {
            notes = <<-EOT
                    **Always Runs**
                    
                    Pulls the connection secrets from Azure Key Vault.
                    EOT
            properties = {
                Azure.KeyVault.RetrieveSecrets.Account = "Azure.Account"
                Azure.KeyVault.RetrieveSecrets.PrintVariableNames = "False"
                Azure.KeyVault.RetrieveSecrets.VaultName = "bobjwalker-vault"
                Azure.KeyVault.RetrieveSecrets.VaultSecrets = "#{Project.Azure.KeyVault.Secrets}"
                Octopus.Action.Template.Id = "ActionTemplates-561"
                Octopus.Action.Template.Version = "2"
            }
            worker_pool_variable = "Standards.Worker.Pool"

            container {
                feed = "dockerhub"
                image = "#{Standards.Azure.ExecutionContainer}"
            }
        }
    }

    step "run-adhoc-data-update-script" {
        name = "Run AdHoc Data Update Script"

        action {
            action_type = "Octopus.ProcessTemplate"
            properties = {
                Octopus.Action.ProcessTemplate.Reference.Slug = "runbook-run-adhoc-data-update-script"
                Octopus.Action.ProcessTemplate.Reference.VersioningOption = "AlwaysUseLatest"
                Octopus.Action.ProcessTemplate.Reference.VersionMask = "X"
                Octopus.Action.RunOnServer = "false"
                "Octopus.Step[Check Script For Auto Approval].Action[Check Script For Auto Approval].Container" = "{\"FeedId\":null,\"Image\":null,\"GitUrl\":null,\"Dockerfile\":null}"
                "Octopus.Step[Check Script For Auto Approval].Action[Check Script For Auto Approval].Properties[Octopus.Action.RunOnServer]" = "true"
                "Octopus.Step[Check Script For Auto Approval].Action[Check Script For Auto Approval].WorkerPoolVariable" = "Standards.Worker.Pool"
                "Octopus.Step[DBA Approve Script].Action[DBA Approve Script].Properties[Octopus.Action.Manual.ResponsibleTeamIds]" = "teams-everyone"
                "Octopus.Step[Notify DBAs of Pending Changes].Action[Notify DBAs of Pending Changes].Properties[Octopus.Action.Email.To]" = "rjwalker28@gmail.com"
                "Octopus.Step[Run AdHoc Script].Action[Run AdHoc Script].Container" = "{\"FeedId\":null,\"Image\":null,\"GitUrl\":null,\"Dockerfile\":null}"
                "Octopus.Step[Run AdHoc Script].Action[Run AdHoc Script].Properties[Octopus.Action.RunOnServer]" = "true"
                "Octopus.Step[Run AdHoc Script].Action[Run AdHoc Script].WorkerPoolVariable" = "Standards.Worker.Pool"
                Template.ScriptToRun.Text = "#{Project.ScriptToRun.Text}"
                Template.SQLServer.Database.Name = "#{Standards.Database.Name}"
                Template.SQLServer.Name = "#{Project.SQLServer.Server.Name}"
                Template.SQLServer.User.Name = "#{Project.SQLServer.User.Name}"
                Template.SQLServer.User.Password = "#{Project.SQLServer.User.Password}"
            }
            worker_pool_variable = ""
        }
    }
}
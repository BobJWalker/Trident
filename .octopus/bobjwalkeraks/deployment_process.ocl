step "azure-key-vault-retrieve-secrets" {
    name = "Azure Key Vault - Retrieve Secrets"

    action {
        notes = <<-EOT
                **Always Runs**
                
                Pulls the database credentials from Azure Key Vault for database and code deployment steps to use.
                EOT
        properties = {
            Azure.KeyVault.RetrieveSecrets.Account = "Azure.Account"
            Azure.KeyVault.RetrieveSecrets.PrintVariableNames = "False"
            Azure.KeyVault.RetrieveSecrets.VaultName = "#{KeyVault.Azure.Name}"
            Azure.KeyVault.RetrieveSecrets.VaultSecrets = "#{KeyVault.Azure.Secrets.List}"
            Octopus.Action.Template.Id = "ActionTemplates-561"
            Octopus.Action.Template.Version = "2"
        }
        worker_pool_variable = "Standards.Worker.Pool"

        container {
            feed = "dockerhub"
            image = "#{Standards.Azure.ExecutionContainer}"
        }
    }
}

step "scan-sbom" {
    name = "Scan SBOM"

    action {
        action_type = "Octopus.Script"
        properties = {
            Octopus.Action.Script.ScriptBody = "Write-Host \"Hello World\""
            Octopus.Action.Script.ScriptSource = "Inline"
            Octopus.Action.Script.Syntax = "PowerShell"
            OctopusUseBundledTooling = "False"
        }
        worker_pool = "homelab-windows"

        packages "Trident.SBOM" {
            acquisition_location = "Server"
            feed = "octopus-server-built-in"
            package_id = "Trident.SBOM"
            properties = {
                Extract = "True"
                Purpose = ""
                SelectionMode = "immediate"
            }
        }
    }
}

process_template "verify-build-artifacts" {
    name = "Verify Build Artifacts"
    process_template_slug = "deploy-process-verify-build-artifacts"
    version_mask = "2.3.X"

    package_parameter "Template.SBOM.Artifact" {
        feed = "octopus-server-built-in"
        package_id = "Trident.SBOM"
    }

    parameter "Template.Verify.WorkerPool" {
        value = "#{Standards.Worker.Pool}"
    }

    parameter "Template.Verify.ExecutionContainerFeed" {
        value = "Feeds-1283"
    }

    parameter "Template.Git.AuthToken" {
        value = "#{KeyVault.GitHub.Token}"
    }
}

step "verify-infrastructure" {
    name = "Verify Infrastructure"

    action {
        channels = ["release"]
        properties = {
            Octopus.Action.Template.Id = "ActionTemplates-521"
            Octopus.Action.Template.Version = "10"
            Run.Runbook.Api.Key = "#{KeyVault.Octopus.Api.Key}"
            Run.Runbook.AutoApproveManualInterventions = "No"
            Run.Runbook.Base.Url = "#{Octopus.Web.ServerUri}"
            Run.Runbook.CaCBranchName = "#{Octopus.Release.Git.BranchName}"
            Run.Runbook.CancelInSeconds = "1800"
            Run.Runbook.CustomNotes.Toggle = "False"
            Run.Runbook.DateTime = "N/A"
            Run.Runbook.Environment.Name = "#{Octopus.Environment.Id}"
            Run.Runbook.Machines = "N/A"
            Run.Runbook.ManualIntervention.EnvironmentToUse = "#{Octopus.Environment.Name}"
            Run.Runbook.Name = "Configure Application Infrastructure"
            Run.Runbook.Project.Name = "#{Octopus.Project.Name}"
            Run.Runbook.Space.Name = "#{Octopus.Space.Name}"
            Run.Runbook.UsePublishedSnapShot = "True"
            Run.Runbook.Waitforfinish = "True"
        }
        worker_pool_variable = "Standards.Worker.Pool"
    }
}

process_template "deploy-databases" {
    name = "Deploy Databases"
    process_template_slug = "deploy-database"
    version_mask = "2.0.X"

    package_parameter "Template.Database.Package" {
        feed = "octopus-server-built-in"
        package_id = "Trident.Database.DbUp"
    }

    parameter "Template.DbUp.Executable" {
        value = "Trident.Database.DbUp"
    }

    parameter "Template.Database.ChangeReportDirectory" {
        value = "#{Standards.Database.ChangeReport.Path}"
    }

    parameter "Template.WorkerPool" {
        value = "#{Standards.Worker.Pool}"
    }

    parameter "Template.Approval.Environments" {
        value = "Environments-42"
    }

    parameter "Template.Database.ConnectionString" {
        value = "#{KeyVault.SQLServer.Connection.String}"
    }
}

process_template "deploy-k8s-manifest" {
    name = "Deploy K8s Manifest"
    process_template_slug = "deploy-process-deploy-to-kubernetes-via-manifest"
    version_mask = "1.1.X"

    package_parameter "K8sTemplate.Container" {
        feed = "dockerhub"
        package_id = "bobjwalker99/trident"
    }

    parameter "K8sTemplate.Target.Tag" {
        value = "trident-web"
    }

    parameter "K8sTemplate.Git.Repo" {
        value = "https://github.com/BobJWalker/Trident.git"
    }

    parameter "K8sTemplate.Namespace" {
        value = "#{Standards.K8s.Namespace}"
    }

    parameter "K8sTemplate.Verification.Script.Path" {
        value = "scripts/VerifySuccessfulDeployment.ps1"
    }

    parameter "K8sTemplate.Worker.Pool" {
        value = "#{Standards.Worker.Pool}"
    }
}

step "notify-team-of-deployment-status" {
    condition = "Always"
    name = "Notify Team of Deployment Status"

    action {
        channels = ["release"]
        notes = <<-EOT
                **Always Runs**
                
                Notifies the team of the deployment status of the application.
                EOT
        properties = {
            Octopus.Action.Template.Id = "ActionTemplates-101"
            Octopus.Action.Template.Version = "15"
            OctopusUseBundledTooling = "False"
            ssn_Channel = "trident-status"
            ssn_Color = "#{unless Octopus.Deployment.Error}good#{else}danger#{/unless}"
            ssn_HookUrl = "#{Notification.Slack.Webhook.Url}"
            ssn_IconUrl = "https://octopus.com/content/resources/favicon.png"
            ssn_Message = "#{Notification.Body.Text}"
            ssn_Title = "#{Notification.DeploymentStatus.Subject.Text}"
            ssn_Username = "Octopus Deploy"
        }
        worker_pool_variable = "Standards.Worker.Pool"
    }
}
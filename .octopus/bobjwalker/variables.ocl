variable "Project.Connection.String" {
    value "Server=#{Project.Database.Server.Name};Database=#{Project.Database.Name};User Id=#{Project.Database.User.Name};Password=#{Project.Database.User.Password};trustServerCertificate=true;" {}
}

variable "Project.Database.Check.Name" {
    value "Trident_#{Octopus.Environment.Name}_Check" {}
}

variable "Project.Database.MigrationLocation" {
    value "filesystem:#{Octopus.Action.Package[Flyway.Package.Value].ExtractedPath}/migrations" {}
}

variable "Project.Database.Name" {
    value "Trident_Dev" {
        environment = ["development"]
    }

    value "Trident_Test" {
        environment = ["test"]
    }

    value "Trident_Stg" {
        environment = ["staging"]
    }

    value "Trident_Prod" {
        environment = ["production"]
    }
}

variable "Project.Database.Report.Path" {
    value "C:\\DatabaseReports\\\\#{Octopus.Environment.Name}" {}
}

variable "Project.Database.Server.Name" {
    value "host.docker.internal" {}
}

variable "Project.ExecutionContainer.Flyway" {
    value "octopuslabs/flyway-workertools:10.4.1" {}
}

variable "Project.ExecutionContainer.K8s" {
    value "octopuslabs/k8s-workertools:1.29.0" {}
}

variable "Project.Flyway.Check.Connection.String" {
    value "jdbc:sqlserver://localhost:1433;databaseName=#{Project.Database.Check.Name};trustServerCertificate=true;" {}
}

variable "Project.Flyway.Connection.String" {
    value "jdbc:sqlserver://localhost:1433;databaseName=#{Project.Database.Name};trustServerCertificate=true;" {}
}

variable "Project.K8s.Namespace" {
    value "#{Octopus.Environment.Name | ToLower }" {}
}

variable "Project.ScriptToRun.Text" {
    value {
        process = ["runbook/run-adhoc-data-script"]

        prompt {
            description = "Please enter the SQL Script you wish to run."
            display_settings = {
                Octopus.ControlType = "MultiLineText"
            }
            label = "SQL Script To Run"
            required = true
        }
    }
}

variable "spec:rules:0:host" {
    value "tridentdev.local" {
        environment = ["development"]
    }

    value "tridenttest.local" {
        environment = ["test"]
    }

    value "tridentstaging.local" {
        environment = ["staging"]
    }

    value "tridentprod.local" {
        environment = ["production"]
    }
}

variable "spec:template:spec:containers:0:image" {
    value "bobjwalker99/trident:#{Octopus.Action.Package[Trident].PackageVersion}" {}
}

variable "stringData:connectionString" {
    value "#{Project.Connection.String}" {}
}